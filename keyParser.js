// Generated by CoffeeScript 1.7.1
(function() {
  var kinolaParser, theParser;

  kinolaParser = (function() {
    function kinolaParser() {
      this.parsedString;
    }

    kinolaParser.prototype.changeVal = function(newString, newFormat) {
      return this.parsedString = this.parseThis(newString, newFormat);
    };

    kinolaParser.prototype.getVal = function(outFormat) {
      this.outFormat = outFormat;
      return this.parsedString;
    };

    kinolaParser.prototype.parseThis = function(theString, theFormat) {
      var delimiter, keyCommand, keyOut, parseOutput, separatedString, shortAction, shortOutput, shortString, splitCommand, theAction, theKey, _i, _len;
      if (theFormat === "short") {
        shortString = true;
      } else {
        shortString = false;
      }
      if (shortString) {
        delimiter = "/";
      } else {
        delimiter = ",";
      }
      separatedString = theString.split(delimiter);
      if (!shortString) {
        shortOutput = [];
        for (_i = 0, _len = separatedString.length; _i < _len; _i++) {
          keyCommand = separatedString[_i];
          keyCommand = keyCommand.replace(/^\s/, "");
          splitCommand = keyCommand.split(" ");
          theAction = splitCommand[0].toLowerCase();
          theKey = splitCommand[1];
          if (theAction === "hold") {
            shortAction = "h";
          } else if (theAction === "push") {
            shortAction = "p";
          } else if (theAction === "release") {
            shortAction = "r";
          } else {
            this.oops();
          }
          keyOut = shortAction + theKey;
          shortOutput.push(keyOut);
        }
        parseOutput = shortOutput.toString();
      } else {
        parseOutput = theString;
      }
      return parseOutput;
    };

    kinolaParser.prototype.oops = function() {
      return "oops";
    };

    return kinolaParser;

  })();

  theParser = new kinolaParser();

  theParser.changeVal("hold 128, hold 130, push 212, release all", "long");

  alert(theParser.getVal());

}).call(this);
